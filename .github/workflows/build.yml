name: Build Custom Windows Client (Single Job)

on:
  workflow_dispatch:

env:
  RUSTDESK_VERSION: ${{ vars.RUSTDESK_VERSION || '1.4.3' }}
  FLUTTER_VERSION: "3.24.5"
  RUST_VERSION: "1.75"
  LLVM_VERSION: "15.0.6"
  VCPKG_COMMIT_ID: "120deac3062162151622ca4860575a33844ba10b"
  VCPKG_DEFAULT_HOST_TRIPLET: "x64-windows-static"

  FILENAME: ${{ vars.FILENAME || 'rustdesk' }}
  APP_NAME: ${{ vars.APP_NAME || 'RustDesk' }}
  COMPANY_NAME: ${{ vars.COMPANY_NAME || 'Purslane Ltd' }}
  CUSTOM_URL: ${{ vars.CUSTOM_URL }}
  DOWNLOAD_URL: ${{ vars.DOWNLOAD_URL }}
  DIRECTION: ${{ vars.DIRECTION || 'both' }}
  DENY_LAN: ${{ vars.DENY_LAN || 'false' }}
  DELAY_FIX: ${{ vars.DELAY_FIX || 'true' }}
  RUN_AS_ADMIN: ${{ vars.RUN_AS_ADMIN || 'false' }}
  HIDE_CM: ${{ vars.HIDE_CM || 'false' }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
  API_SERVER: ${{ secrets.API_SERVER }}
  PERMANENT_PASSWORD: ${{ secrets.PERMANENT_PASSWORD }}

jobs:
  build-windows-client:
    name: Build and Package Windows Client
    runs-on: windows-2022

    steps:
      - name: Checkout All Sources
        uses: actions/checkout@v4
        with: { path: "self" }

      - uses: actions/checkout@v4
        with: { repository: "rustdesk/rustdesk", ref: "${{ env.RUSTDESK_VERSION }}", path: "rustdesk", submodules: "recursive" }

      - uses: actions/checkout@v4
        with: { repository: "rustdesk-org/RustDeskTempTopMostWindow", path: "RustDeskTempTopMostWindow" }

      - name: Install Tools (Rust, Choco, Flutter)
        uses: dtolnay/rust-toolchain@v1
        with: { toolchain: "${{ env.RUST_VERSION }}", targets: "x86_64-pc-windows-msvc", components: "rustfmt" }

      - run: choco install -y python311 llvm vcredist140 nsis imagemagick.app visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64" --no-progress

      - uses: subosito/flutter-action@v2
        with: { channel: "stable", flutter-version: "${{ env.FLUTTER_VERSION }}", cache: true }

      - name: Install flutter_rust_bridge
        run: cargo install flutter_rust_bridge_codegen --version 1.80.1 --features "uuid" --locked

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: "rustdesk/vcpkg.json"
          vcpkgDirectory: "C:/vcpkg_installed/vcpkg"
          vcpkgGitCommitId: ${{ env.VCPKG_COMMIT_ID }}
          runInstall: true
          vcpkgTriplet: "x64-windows-static"

      - name: Build WindowInjection DLL
        uses: microsoft/setup-msbuild@v2
      - run: |
          cd RustDeskTempTopMostWindow
          git checkout 53b548a5398624f7149a382000397993542ad796
          msbuild WindowInjection/WindowInjection.vcxproj -p:Configuration=Release -p:Platform=x64 -p:PlatformToolset=v143 /p:TargetVersion=Windows10
        shell: powershell
      - name: Copy WindowInjection.dll to rustdesk folder
        shell: powershell
        run: Copy-Item "RustDeskTempTopMostWindow/WindowInjection/x64/Release/WindowInjection.dll" "rustdesk/"

      - name: Generate Bridge Files
        working-directory: rustdesk
        run: |
          cd flutter && flutter pub get && cd ..
          flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart --c-output ./flutter/macos/Runner/bridge_generated.h


      - name: Patch Flutter SDK
        shell: bash
        run: |
          FLUTTER_SDK_DIR=$(dirname $(dirname $(which flutter)))
          PATCH_FILE="${{ github.workspace }}/rustdesk/.github/patches/flutter_3.24.4_dropdown_menu_enableFilter.diff"
          cp "$PATCH_FILE" "$FLUTTER_SDK_DIR/"
          cd "$FLUTTER_SDK_DIR"
          git apply "flutter_3.24.4_dropdown_menu_enableFilter.diff"

      - name: Apply Custom Config
        working-directory: rustdesk
        shell: powershell
        run: |
          if (Test-Path "${{ github.workspace }}/self/assets/icon.png") {
            Copy-Item "${{ github.workspace }}/self/assets/icon.png" -Destination "res/icon.png"
            magick res/icon.png -define icon:auto-resize=256,64,48,32,16 res/icon.ico
            Copy-Item "res/icon.ico" "res/tray-icon.ico"
          }
          if (Test-Path "${{ github.workspace }}/self/assets/logo.png") {
            Copy-Item "${{ github.workspace }}/self/assets/logo.png" -Destination "res/logo.png"
          }
          (Get-Content libs/hbb_common/src/config.rs).Replace('rs-ny.rustdesk.com', '${{ env.SERVER_IP }}') | Set-Content libs/hbb_common/src/config.rs
          (Get-Content libs/hbb_common/src/config.rs).Replace('OeVuKk5nlHiXp+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw=', '${{ env.PUBLIC_KEY }}') | Set-Content libs/hbb_common/src/config.rs
          (Get-Content src/common.rs).Replace('https://admin.rustdesk.com', '${{ env.API_SERVER }}') | Set-Content src/common.rs
      
      - name: FINAL CHECK - Verify Environment before Build
        shell: powershell
        run: |
          Write-Host "--- Verifying VCPKG_ROOT ---"
          Write-Host "VCPKG_ROOT is: $env:VCPKG_ROOT"
          if (-not $env:VCPKG_ROOT) { Write-Error "VCPKG_ROOT IS NOT SET!"; exit 1 }
          
          Write-Host "--- Listing opus headers in vcpkg include directory ---"
          $includePath = "$($env:VCPKG_ROOT)/installed/${{ env.VCPKG_DEFAULT_HOST_TRIPLET }}/include"
          if (Test-Path $includePath) {
            Get-ChildItem -Path $includePath -Filter "opus*.h"
          } else {
            Write-Error "VCPKG include path not found at $includePath"
            exit 1
          }

      - name: Build & Package
        working-directory: rustdesk
        shell: powershell
        run: |
          python3 .\build.py --flutter --portable --skip-portable-pack
          $buildDir = "flutter/build/windows/x64/runner/Release"
          Copy-Item "WindowInjection.dll" $buildDir # Copiamos el DLL que ya est√° en la carpeta rustdesk
          #Copy-Item "custom.txt" $buildDir
          if (Test-Path "res/logo.png") { Copy-Item "res/logo.png" "$buildDir/data/flutter_assets/assets/" }
          Set-Location libs/portable
          python3 generate.py -f "../../$buildDir" -o . -e "../../$buildDir/rustdesk.exe"
          Move-Item "../../target/release/rustdesk-portable-packer.exe" "../../${{ env.FILENAME }}.exe"
          Set-Location ../../
          $msiAppName = "${{ env.APP_NAME }}".Replace(' ','_')
          Copy-Item "$buildDir/rustdesk.exe" "$buildDir/$msiAppName.exe"
          Set-Location res/msi
          python3 preprocess.py --app-name "$msiAppName" --arp -d "../../$buildDir"
          nuget restore msi.sln
          & "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\MSBuild\Current\Bin\amd64\msbuild.exe" msi.sln -p:Configuration=Release -p:Platform=x64
          Move-Item "Package/bin/x64/Release/en-us/Package.msi" "../../${{ env.FILENAME }}.msi"

      - name: Upload Final Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-builds
          path: |
            rustdesk/${{ env.FILENAME }}.exe
            rustdesk/${{ env.FILENAME }}.msi